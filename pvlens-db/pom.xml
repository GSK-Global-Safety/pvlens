<!--
 *
 * This file is part of PVLens.
 *
 * Copyright (C) 2025 GlaxoSmithKline
 *
 * PVLens is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * PVLens is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with PVLens.  If not, see <https://www.gnu.org/licenses/>.
 *
-->
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	
	
	<modelVersion>4.0.0</modelVersion>
	<groupId>org.pvlens</groupId>
	<artifactId>pvlens-spl-db</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>PVLens Database Pipeline</name>
	<description>Create a database of listed AEs with date added to the label
		from the SPL downloaded files</description>

	<dependencies>

		<!-- Lucene supports the Snowball stemmer -->
		<dependency>
		    <groupId>org.apache.lucene</groupId>
		    <artifactId>lucene-analysis-common</artifactId>
		    <version>9.12.3</version>
		</dependency>		

		<dependency>
			<groupId>org.jsoup</groupId>
			<artifactId>jsoup</artifactId>
			<version>1.21.2</version>
		</dependency>

		<!-- Apache POI -->
		<dependency>
		    <groupId>org.apache.poi</groupId>
		    <artifactId>poi-ooxml</artifactId>
		    <version>5.4.1</version>
		</dependency>

		<!-- OpenNLP Core Library -->
		<dependency>
			<groupId>org.apache.opennlp</groupId>
			<artifactId>opennlp-tools</artifactId>
			<version>2.5.6.1</version>
		</dependency>

		<!-- Additional dependencies for handling I/O and other utilities -->
		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<version>2.20.0</version>
		</dependency>

		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
			<version>3.19.0</version>
		</dependency>

		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-csv</artifactId>
			<version>1.14.1</version>
		</dependency>
		
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<version>1.18.42</version>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>com.mysql</groupId>
			<artifactId>mysql-connector-j</artifactId>
			<version>9.4.0</version>
		</dependency>

		<!-- JUnit 5 API -->
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-api</artifactId>
			<version>5.10.2</version>
			<scope>test</scope>
		</dependency>

		<!-- JUnit 5 Engine (needed at runtime) -->
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-engine</artifactId>
			<version>5.10.2</version>
			<scope>test</scope>
		</dependency>

		<!-- Parameterized tests (optional) -->
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-params</artifactId>
			<version>5.10.2</version>
			<scope>test</scope>
		</dependency>

		<!-- Mockito for mocking dependencies in unit tests -->
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-core</artifactId>
			<version>5.20.0</version>
			<scope>test</scope>
		</dependency>

		<!-- Mockito JUnit 5 integration -->
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-junit-jupiter</artifactId>
			<version>5.20.0</version>
			<scope>test</scope>
		</dependency>

		<dependency>
		    <groupId>com.h2database</groupId>
		    <artifactId>h2</artifactId>
		    <version>2.4.240</version>
		    <scope>test</scope>
		</dependency>

	</dependencies>



	<build>
		<plugins>

			<!-- Unit tests -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>3.2.5</version>
				<configuration>
					<useModulePath>false</useModulePath>
				</configuration>
			</plugin>

			<!-- Integration tests -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>
				<version>3.2.5</version>
				<executions>
					<execution>
						<goals>
							<goal>integration-test</goal>
							<goal>verify</goal>
						</goals>
						<configuration>
							<includes>
								<include>**/*IT.java</include>
								<include>**/*ITCase.java</include>
							</includes>
							<useModulePath>false</useModulePath>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.jvnet.jaxb2.maven2</groupId>
				<artifactId>maven-jaxb2-plugin</artifactId>
				<version>0.15.1</version>
				<dependencies>
					<dependency>
						<groupId>org.glassfish.jaxb</groupId>
						<artifactId>jaxb-runtime</artifactId>
						<version>4.0.6</version>
					</dependency>
				</dependencies>
			</plugin>

			<plugin>
				<artifactId>maven-assembly-plugin</artifactId>
				<configuration>
					<archive>
						<manifest>
							<!-- mainClass>org.pvlens.spl.PVLensMain mainClass -->
							<mainClass>org.pvlens.spl.PVLensMain</mainClass>
						</manifest>
					</archive>
					<descriptorRefs>
						<descriptorRef>jar-with-dependencies</descriptorRef>
					</descriptorRefs>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.6.1</version>
				<configuration>
					<source>17</source>
					<target>17</target>
				</configuration>
			</plugin>

			<!-- JaCoCo coverage -->
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>0.8.12</version>
				<executions>
					<!-- Attach agent when tests run -->
					<execution>
						<id>prepare-agent</id>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
					</execution>

					<!-- Create the report after tests -->
					<execution>
						<id>report</id>
						<phase>verify</phase>
						<goals>
							<goal>report</goal>
						</goals>
					</execution>

				</executions>
				<configuration>
					<excludes>
						<exclude>**/conf/**</exclude>
						<exclude>**/util/Logger.class</exclude>
						<exclude>**/App.class</exclude>
					</excludes>
				</configuration>
			</plugin>

			
			<plugin>
			  <groupId>org.owasp</groupId>
			  <artifactId>dependency-check-maven</artifactId>
			  <version>12.1.6</version>
			  <executions>
			    <execution>
			      <phase>verify</phase>
			      <goals><goal>check</goal></goals>
			    </execution>
			  </executions>
			  <configuration>
			    <formats>HTML,JSON,JUNIT</formats>
			    <outputDirectory>${project.build.directory}/dependency-check-report</outputDirectory>
			    <!-- choose one of the following policies -->
			    <!-- <failOnError>true</failOnError> -->
			    <failBuildOnCVSS>7.0</failBuildOnCVSS>
			    <dataDirectory>${user.home}/.m2/repository/org/owasp/dependency-check-data</dataDirectory>
			    <!-- optional: supply in CI secrets -->
			    <!-- <nvdApiKey>${env.NVD_API_KEY}</nvdApiKey> -->
			    <!-- optional: suppressions -->
			    <!--
			    <suppressionFiles>
			      <suppressionFile>${project.basedir}/dependency-check-suppression.xml</suppressionFile>
			    </suppressionFiles>
			    -->
			  </configuration>
			</plugin>
            
			<plugin>
			  <groupId>org.cyclonedx</groupId>
			  <artifactId>cyclonedx-maven-plugin</artifactId>
			  <version>2.9.0</version>
			  <executions>
			    <execution>
			      <phase>package</phase>
			      <goals><goal>makeBom</goal></goals>
			      <configuration>
			        <schemaVersion>1.5</schemaVersion>
			        <includeBomSerialNumber>true</includeBomSerialNumber>
			        <outputFormat>xml</outputFormat>
			      </configuration>
			    </execution>
			  </executions>
			</plugin>
            
	        <plugin>
	            <groupId>org.apache.maven.plugins</groupId>
	            <artifactId>maven-javadoc-plugin</artifactId>
	            <version>3.12.0</version>
	            <executions>
	                <execution>
	                    <id>attach-javadocs</id>
	                    <goals>
	                        <goal>jar</goal>
	                    </goals>
	                </execution>
	            </executions>
	        </plugin>
		</plugins>
	</build>

</project>
